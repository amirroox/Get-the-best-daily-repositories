// Code generated by sqlc. DO NOT EDIT.

package postgres

import (
	"database/sql"
	"fmt"

	"github.com/jackc/pgtype"
)

type TaskPriority string

const (
	TaskPriorityHigh   TaskPriority = "high"
	TaskPriorityNormal TaskPriority = "normal"
	TaskPriorityLow    TaskPriority = "low"
)

func (e *TaskPriority) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TaskPriority(s)
	case string:
		*e = TaskPriority(s)
	default:
		return fmt.Errorf("unsupported scan type for TaskPriority: %T", src)
	}
	return nil
}

type TaskStatus string

const (
	TaskStatusQueued    TaskStatus = "queued"
	TaskStatusRunning   TaskStatus = "running"
	TaskStatusFailed    TaskStatus = "failed"
	TaskStatusSucceeded TaskStatus = "succeeded"
)

func (e *TaskStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TaskStatus(s)
	case string:
		*e = TaskStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for TaskStatus: %T", src)
	}
	return nil
}

type TaskType string

const (
	TaskTypeSendEmail TaskType = "send_email"
	TaskTypeRunQuery  TaskType = "run_query"
)

func (e *TaskType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TaskType(s)
	case string:
		*e = TaskType(s)
	default:
		return fmt.Errorf("unsupported scan type for TaskType: %T", src)
	}
	return nil
}

type Task struct {
	ID        int32
	Name      string
	Type      TaskType
	Status    TaskStatus
	Priority  TaskPriority
	Payload   pgtype.JSON
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
}

type TasksStatusChangeHistory struct {
	ID        int32
	TaskID    int32
	OldStatus TaskStatus
	NewStatus TaskStatus
	CreatedAt sql.NullTime
}
