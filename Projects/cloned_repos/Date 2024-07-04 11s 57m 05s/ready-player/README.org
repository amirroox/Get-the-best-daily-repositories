üëâ [[https://github.com/sponsors/xenodium][Support this work via GitHub Sponsors]]

* Ready Player Mode

A lightweight major mode to open media (audio/video) files in an Emacs buffer.

[[file:screenshots/audio-player.png]]

[[file:screenshots/video-player.png]]

* Install

This package isn't on MELPA just yet. In the meantime, clone the repo or use the handy =package-vc-install= (as of Emacs 29):

#+begin_src emacs-lisp :lexical no
  (package-vc-install "https://github.com/xenodium/ready-player")
#+end_src

* Setup

#+begin_src emacs-lisp :lexical no
  (require 'ready-player)
  (ready-player-add-to-auto-mode-alist)
#+end_src

To customize supported media files, set =ready-player-supported-media= before invoking =ready-player-add-to-auto-mode-alist=.

* use-package

You can combine the previous install/setup into something like the following:

#+begin_src emacs-lisp :lexical no
  (use-package ready-player
    :init
    (unless (package-installed-p (intern "ready-player"))
      (package-vc-install "https://github.com/xenodium/ready-player"))
    :config
    (ready-player-add-to-auto-mode-alist))
#+end_src

* External dependencies

** Playback

=ready-player-mode= relies on command line utilities to play media.

By default, =ready-player-mode= will try to use either =mpv=, =vlc=, =ffplay=, or =mplayer= (in that order). Customize =ready-player-open-playback-commands= to your preference.

Install either of these using your favorite method.

On macOS:

#+begin_src sh
  brew install mpv
#+end_src

** Metadata

Metadata is extracted using =ffprobe=, which comes bundled with [[https://www.youtube.com/watch?v=9kaIXkImCAM][ffmpeg]].

Install using your favorite method.

On macOS:

#+begin_src sh
  brew install ffmpeg
#+end_src

** Thumbnails

=ready-player-mode= prefers [[https://github.com/dirkvdb/ffmpegthumbnailer][ffmpegthumbnailer]] to generate thumbnails, but will fallback to =ffmpeg= otherwise.

Install using your favorite method.

On macOS:

#+begin_src sh
  brew install ffmpegthumbnailer
#+end_src

* Customizations

#+BEGIN_SRC emacs-lisp :results table :colnames '("Custom variable" "Description") :exports results
  (let ((rows))
    (mapatoms
     (lambda (symbol)
       (when (and (string-match "^ready-player"
                                (symbol-name symbol))
                  (custom-variable-p symbol))
         (push `(,symbol
                 ,(car
                   (split-string
                    (or (get (indirect-variable symbol)
                             'variable-documentation)
                        (get symbol 'variable-documentation)
                        "")
                    "\n")))
               rows))))
    rows)
#+END_SRC

#+RESULTS:
| Custom variable                     | Description                                       |
|-------------------------------------+---------------------------------------------------|
| ready-player-supported-media        | Supported media types.                            |
| ready-player-play-icon              | Play icon string, for example: "‚èµ".               |
| ready-player-stop-icon              | Stop icon string, for example: "‚ñ†".               |
| ready-player-open-externally-icon   | Open externally icon string, for example: "‚û¶".    |
| ready-player-show-thumbnail         | Whether or not to attempt to display a thumbnail. |
| ready-player-open-playback-commands | Command line utilities to try for playback.       |

* Commands

#+BEGIN_SRC emacs-lisp :results table :colnames '("Command" "Description") :exports results
    (let ((rows))
      (mapatoms
       (lambda (symbol)
         (when (and (string-match "^ready-player"
                                  (symbol-name symbol))
                    (commandp symbol))
           (push `(,(string-join
                     (seq-filter
                      (lambda (symbol)
                        (not (string-match "menu" symbol)))
                      (mapcar
                       (lambda (keys)
                         (key-description keys))
                       (or
                        (where-is-internal
                         (symbol-function symbol)
                         comint-mode-map
                         nil nil (command-remapping 'comint-next-input))
                        (where-is-internal
                         symbol ready-player-mode-map nil nil (command-remapping symbol))
                        (where-is-internal
                         (symbol-function symbol)
                         ready-player-mode-map nil nil (command-remapping symbol)))))  " or ")
                   ,(symbol-name symbol)
                   ,(car
                     (split-string
                      (or (documentation symbol t) "")
                      "\n")))
                 rows))))
      rows)
#+END_SRC

#+RESULTS:
| SPC       | ready-player-toggle-play-stop | Toggle play/stop of media.                                           |
| o or e    | ready-player-open-externally  | Open visited file in default external program.                       |
|           | ready-player-mode             | Major mode to preview and play media files.                          |
| p         | ready-player-previous-file    | Visit the preceding image in the same directory as the current file. |
| q         | ready-player-quit             | Quit `ready-player-mode' window and kill buffer.                     |
| n         | ready-player-next-file        | Visit the next media file in the same directory as current file.     |
| TAB       | ready-player-next-button      | Navigate to next button.                                             |
| <backtab> | ready-player-previous-button  | Navigate to previous button.                                         |

üëâ [[https://github.com/sponsors/xenodium][Support this work via GitHub Sponsors]]
